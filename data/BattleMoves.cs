using u8  = System.Byte;
using u16 = System.UInt16;
using u32 = System.UInt32;
using u64 = System.UInt64;
using System.Threading.Tasks;

namespace PkmnEngine {
	public static class BattleMoves {
		public const u16 NUM_MOVES = (u16)BattleMoveID.MOVES_NR_ITEMS;

		#region flags
			public const u32 MOVE_TARGET_SELECTED				= 0;		// Any adjacent to the user, not user
			public const u32 MOVE_TARGET_DEPENDS				= 1 << 0;	// 
			public const u32 MOVE_TARGET_USER_OR_SELECTED		= 1 << 1;	// User or any adjacent
			public const u32 MOVE_TARGET_RANDOM					= 1 << 2;	// Random opponent
			public const u32 MOVE_TARGET_BOTH					= 1 << 3;	// 
			public const u32 MOVE_TARGET_USER					= 1 << 4;	// User only
			public const u32 MOVE_TARGET_FOES_AND_ALLY			= 1 << 5;	// Adjacent opponents and all allies, not self
			public const u32 MOVE_TARGET_OPPONENTS_FIELD		= 1 << 6;	// Adjacent opponents, not allies
			public const u32 MOVE_TARGET_SELECTED_OPPONENT		= 1 << 7;	// Selected opponent, but not ally
			public const u32 MOVE_TARGET_USER_OR_ALLY			= 1 << 8;	// User or an ally, not opponent
			public const u32 MOVE_TARGET_SELECTED_ALLY			= 1 << 9;	// Ally, not user or opponent
			public const u32 MOVE_TARGET_ANY_NOT_USER			= 1 << 10;	// Any opponent or ally, not user
			public const u32 MOVE_TARGET_USER_FIELD				= 1 << 11;	// All allies
			public const u32 MOVE_TARGET_ALL					= 1 << 12;	// All mons on field
			public const u32 MOVE_TARGET_ANY					= 1 << 13;	// Any one mon
			public const u32 MOVE_TARGET_ALL_OPPONENTS			= 1 << 14;	// Every opponent, no allies
			public const u32 MOVE_TARGET_USER_FIELD_AND_PARTY	= 1 << 15;	// All allies and all mons in the user's party
			public const u32 MOVE_TARGET_USER_PARTY_SELECTED	= 1 << 16;	// A selected mon in the user's party

			internal const u32 MASK_MOVE_TARGET_SINGLE =
				MOVE_TARGET_SELECTED |
				MOVE_TARGET_DEPENDS |
				MOVE_TARGET_USER_OR_SELECTED |
				MOVE_TARGET_RANDOM |
				MOVE_TARGET_USER |
				MOVE_TARGET_SELECTED_OPPONENT |
				MOVE_TARGET_USER_OR_ALLY |
				MOVE_TARGET_SELECTED_ALLY |
				MOVE_TARGET_ANY_NOT_USER |
				MOVE_TARGET_ANY  |
				MOVE_TARGET_USER_PARTY_SELECTED;
			internal const u32 MASK_MOVE_TARGET_MULTIPLE = 
				MOVE_TARGET_BOTH |
				MOVE_TARGET_FOES_AND_ALLY |
				MOVE_TARGET_OPPONENTS_FIELD |
				MOVE_TARGET_USER_FIELD |
				MOVE_TARGET_ALL |
				MOVE_TARGET_ALL_OPPONENTS |
				MOVE_TARGET_USER_FIELD_AND_PARTY;

		[System.Flags] public enum Flag : u64 {
			MAKES_CONTACT				= 1L << 0,
			PROTECT_AFFECTED			= 1L << 1,
			MAGIC_COAT_AFFECTED			= 1L << 2,
			SNATCH_AFFECTED				= 1L << 3,
			MIRROR_MOVE_AFFECTED		= 1L << 4,
			KINGS_ROCK_AFFECTED			= 1L << 5,
			BULLETPROOF_AFFECTED		= 1L << 6,
			SHARPNESS_AFFECTED			= 1L << 7,
			MEGA_LAUNCHER_AFFECTED		= 1L << 8,
			BIG_ROOT_AFFECTED			= 1L << 9,
			LIQUID_OOZE_AFFECTED		= 1L << 10,
			WIND_MOVE					= 1L << 11,
			SOUND_MOVE					= 1L << 12,
			USABLE_OUT_OF_BATTLE		= 1L << 13,
			PUNCH_MOVE					= 1L << 14,
			BITE_MOVE					= 1L << 15,
			PULSE_MOVE					= 1L << 16,
			GRAVITY_AFFECTED			= 1L << 17,
			HIGH_CRITICAL				= 1L << 18,
			HIGH_CRITICAL2				= 1L << 19,
			ALWAYS_CRITICAL				= 1L << 20,
			ALWAYS_HIT					= 1L << 21,
			IGNORE_TYPE_EFF				= 1L << 22,
			CHIP_AWAY					= 1L << 23,
			THAWS_USER					= 1L << 24,
			ALWAYS_HIT_RAIN				= 1L << 25,
			ALWAYS_HIT_HAIL				= 1L << 26,
			USABLE_WHILE_ASLEEP			= 1L << 27,
			HITS_SEMI_INVUL_GROUND		= 1L << 28,
			HITS_SEMI_INVUL_AIR			= 1L << 29,
			HITS_SEMI_INVUL_WATER		= 1L << 30,
			HITS_SEMI_INVUL_PHANTOM		= 1L << 31,
			ACC_LOSS_IN_SUNLIGHT		= 1L << 32,
			PROTECTS					= 1L << 33,
			CHARGING_TURN				= 1L << 34,
			SEMI_INVUL_TURN				= 1L << 35,
			UNUSABLE_BY_SLEEP_TALK		= 1L << 36,
			CANNOT_BE_SKETCHED			= 1L << 37,
			HITS_UNGROUNDED				= 1L << 38,
			CANNOT_USE_MOVE_TWICE		= 1L << 39,
			DOUBLE_DAMAGE_MINIMIZE		= 1L << 40,
			ALWAYS_HIT_MINIMIZE			= 1L << 41,
			HEALING_MOVE				= 1L << 42,
			ENTRY_HAZARD				= 1L << 43,
		}
		#endregion
	
		/// <summary>
		/// Gets the move detains from a given ID.
		/// </summary>
		/// <param name="move">ID of the move to look up.</param>
		/// <returns>BattleMove corresponding to the given ID.</returns>
		public static BattleMove gBattleMoves(BattleMoveID move) {
			return move switch {
				BattleMoveID.ABSORB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					20,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BIG_ROOT_AFFECTED | Flag.LIQUID_OOZE_AFFECTED
				),
				BattleMoveID.ACCELEROCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ACID => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.POISON,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED_OPPONENT,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED
				),
				BattleMoveID.ACID_ARMOR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ACID_SPRAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit2,
					moveType:				Type.POISON,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.ACROBATICS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Acrobatics,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					55,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ACUPRESSURE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RandomUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_OR_ALLY,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.AERIAL_ACE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.SHARPNESS_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.MAKES_CONTACT
				),
				BattleMoveID.AEROBLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					100,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.AFTER_YOU => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AfterYou,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.AGILITY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.AIR_CUTTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					60,
					accuracy:				95,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AIR_SLASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.FLYING,
					power:					75,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ALLY_SWITCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AllySwitch,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				2,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.AMNESIA => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialDefenseUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.ANCHOR_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Trap,
					moveType:				Type.STEEL,
					power:					80,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ANCIENT_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AllStatsUp,
					moveType:				Type.ROCK,
					power:					60,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.APPLE_ACID => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.GRASS,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AQUA_CUTTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HIGH_CRITICAL | Flag.SHARPNESS_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AQUA_JET => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AQUA_RING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AquaRing,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.AQUA_STEP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedUp,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AQUA_TAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					90,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ARM_THRUST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					15,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ARMOR_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefAndSpdefDown,
					moveType:				Type.FIRE,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AROMATHERAPY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CureNonVolatileStatusHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.AROMATIC_MIST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialDefenseUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED_ALLY,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ASSIST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Assist,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK
				),
				BattleMoveID.ASSURANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Assurance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ASTONISH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.GHOST,
					power:					30,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ASTRAL_BARRAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ATTACK_ORDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HIGH_CRITICAL | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ATTRACT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Attract,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.IGNORE_TYPE_EFF
				),
				BattleMoveID.AURA_SPHERE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					80,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.PULSE_MOVE | Flag.MEGA_LAUNCHER_AFFECTED | Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AURA_WHEEL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedUp,
					moveType:				Type.ELECTRIC,
					power:					110,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AURORA_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.ICE,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.AURORA_VEIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AuroraVeil,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.AUTOTOMIZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Autotomize,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.AVALANCHE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Avalanche,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-4,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.AXE_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_JumpKick,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.FIGHTING,
					power:					120,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BABY_DOLL_EYES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BANEFUL_BUNKER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BanefulBunker,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.BARB_BARRAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BarbBarrage,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BARRAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					15,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BARRIER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.BATON_PASS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BatonPass,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.BEAK_BLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BeakBlast,
					moveType:				Type.FLYING,
					power:					100,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-3,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.BEAT_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BeatUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BEHEMOTH_BASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BEHEMOTH_BLADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BELCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Belch,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					120,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BELLY_DRUM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BellyDrum,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.BESTOW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bestow,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BIDE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bide,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.BIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bind,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					15,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BITE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DARK,
					power:					60,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BITE_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BITTER_BLADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_HealHalf,
					moveType:				Type.FIRE,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BIG_ROOT_AFFECTED | Flag.SHARPNESS_AFFECTED | Flag.LIQUID_OOZE_AFFECTED
				),
				BattleMoveID.BITTER_MALICE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.GHOST,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BLAST_BURN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.FIRE,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BLAZE_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					85,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.BLEAKWIND_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.FLYING,
					power:					100,
					accuracy:				80,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT_RAIN
				),
				BattleMoveID.BLIZZARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					110,
					accuracy:				70,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.WIND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT_HAIL
				),
				BattleMoveID.BLOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Trap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BLUE_FLARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					130,
					accuracy:				85,
					pp:						5,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BODY_PRESS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BodyPress,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BODY_SLAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.NORMAL,
					power:					85,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BOLT_BEAK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BoltBeak,
					moveType:				Type.ELECTRIC,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BOLT_STRIKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					130,
					accuracy:				85,
					pp:						5,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BONE_CLUB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.GROUND,
					power:					65,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BONE_RUSH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					25,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BONEMERANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					50,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BOOMBURST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					140,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BOUNCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bounce,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.FLYING,
					power:					85,
					accuracy:				85,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.BRANCH_POKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					40,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BRAVE_BIRD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BREAKING_SWIPE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.DRAGON,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BRICK_BREAK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PsychicFangs,
					moveType:				Type.FIGHTING,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BRINE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Brine,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					65,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BRUTAL_SWING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BUBBLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.WATER,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BUBBLE_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.WATER,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.BUG_BITE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BugBite,
					moveType:				Type.BUG,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BUG_BUZZ => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.BUG,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.BULK_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BulkUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.BULLDOZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.GROUND,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_GROUND
				),
				BattleMoveID.BULLET_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BULLET_SEED => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					25,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BURN_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnUp,
					moveType:				Type.FIRE,
					power:					130,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BURNING_JEALOUSY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurningJealousy,
					moveType:				Type.FIRE,
					power:					70,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.BURNING_BULWARK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BurningBulwark,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.CALM_MIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CalmMind,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.CAMOUFLAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Camouflage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.CAPTIVATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Captivate,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CEASELESS_EDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					65,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.CHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Charge,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.CHARGE_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackUp,
					moveType:				Type.ELECTRIC,
					power:					50,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	70,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CHARM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CHATTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.FLYING,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.CANNOT_BE_SKETCHED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.CHILLING_WATER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.WATER,
					power:					50,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CHILLY_RECEPTION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ChillyReception,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.CHIP_AWAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ChipAway,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHIP_AWAY
				),
				BattleMoveID.CHLOROBLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_RecoilHalfMaxHp,
					moveType:				Type.GRASS,
					power:					150,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CIRCLE_THROW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SwitchToNextHit,
					moveType:				Type.FIGHTING,
					power:					60,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-6,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CLAMP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Clamp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					35,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CLANGING_SCALES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDown,
					moveType:				Type.DRAGON,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.CLANGOROUS_SOUL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ClangorousSoul,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.CLEAR_SMOG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Haze,
					moveType:				Type.POISON,
					power:					50,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CLOSE_COMBAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefAndSpdefDown,
					moveType:				Type.FIGHTING,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.COACHING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkAndDefUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.COIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkDefAccUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.COLLISION_COURSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CollisionCourse,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.COMET_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					18,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.COMEUPPANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Comeuppance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CONFIDE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialAttackDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.CONFUSE_RAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ConfuseHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CONFUSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.PSYCHIC,
					power:					50,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CONSTRICT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.NORMAL,
					power:					10,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CONVERSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Conversion,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.CONVERSION_2 => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Conversion2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.ALWAYS_HIT
				),
				BattleMoveID.COPYCAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Copycat,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK
				),
				BattleMoveID.CORE_ENFORCER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_CoreEnforcer,
					moveType:				Type.DRAGON,
					power:					100,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CORROSIVE_GAS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CorrosiveGas,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.COSMIC_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CosmicPower,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.COTTON_GUARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp3,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.COTTON_SPORE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.COUNTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Counter,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				-5,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.IGNORE_TYPE_EFF
				),
				BattleMoveID.COURT_CHANGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CourtChange,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.COVET => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Thief,
					moveType:				Type.NORMAL,
					power:					60,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CRABHAMMER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					100,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED |Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CRAFTY_SHIELD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CraftyShield,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				3,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.CROSS_CHOP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				80,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CROSS_POISON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.CRUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BITE_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CRUSH_CLAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.NORMAL,
					power:					75,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.CRUSH_GRIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CrushGrip,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.CURSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Curse,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.CUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				95,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.USABLE_OUT_OF_BATTLE
				),
				BattleMoveID.DARK_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PULSE_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DARK_VOID => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Sleep,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				50,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DARKEST_LARIAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ChipAway,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHIP_AWAY
				),
				BattleMoveID.DAZZLING_GLEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DECORATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkAndSpatkUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.DEFEND_ORDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefAndSpdefUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.DEFENSE_CURL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseCurl,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.DEFOG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Defog,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.USABLE_OUT_OF_BATTLE
				),
				BattleMoveID.DESTINY_BOND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DestinyBond,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.DETECT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Protect,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.DIAMOND_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseUp2,
					moveType:				Type.ROCK,
					power:					100,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DIG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Dig,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.USABLE_OUT_OF_BATTLE | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.DIRE_CLAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DireClaw,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DISABLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Disable,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DISARMING_VOICE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					40,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.DISCHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DIVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Dive,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.USABLE_OUT_OF_BATTLE | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.DIZZY_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DOODLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Doodle,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED_OPPONENT,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.DOOM_DESIRE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FutureSight,
					moveType:				Type.STEEL,
					power:					140,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: 0
				),
				BattleMoveID.DOUBLE_HIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					35,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DOUBLE_IRON_BASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.STEEL,
					power:					60,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DOUBLE_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					30,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DOUBLE_SHOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DoubleShock,
					moveType:				Type.ELECTRIC,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DOUBLE_SLAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					15,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DOUBLE_TEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_EvasionUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.DOUBLE_EDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRACO_METEOR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDown2,
					moveType:				Type.DRAGON,
					power:					130,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_ASCENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefAndSpdefDown,
					moveType:				Type.DRAGON,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_BREATH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.DRAGON,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_CLAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DragonDance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.DRAGON_DARTS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_ENERGY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Eruption,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_HAMMER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PULSE_MOVE | Flag.MEGA_LAUNCHER_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_RAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DragonRage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAGON_RUSH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DRAGON,
					power:					100,
					accuracy:				75,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DRAGON_TAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SwitchToNextHit,
					moveType:				Type.DRAGON,
					power:					60,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-6,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DRAIN_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.LIQUID_OOZE_AFFECTED | Flag.BIG_ROOT_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRAINING_KISS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb75Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.LIQUID_OOZE_AFFECTED | Flag.BIG_ROOT_AFFECTED
				),
				BattleMoveID.DREAM_EATER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DreamEater,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					100,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BIG_ROOT_AFFECTED | Flag.LIQUID_OOZE_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.DRILL_PECK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					80,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED_OPPONENT,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRILL_RUN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					80,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DRUM_BEATING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.GRASS,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DUAL_CHOP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					40,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DUAL_WINGBEAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					40,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DYNAMAX_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.DYNAMIC_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				50,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.EARTH_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.GROUND,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.EARTHQUAKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Earthquake,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					100,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_GROUND
				),
				BattleMoveID.ECHOED_VOICE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_EchoedVoice,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.EERIE_IMPULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialAttackDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.EERIE_SPELL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_EerieSpell,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.EGG_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					100,
					accuracy:				75,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.ELECTRIC_TERRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ElectricTerrain,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ELECTRIFY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Electrify,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ELECTRO_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ElectroBall,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.ELECTRO_DRIFT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CollisionCourse,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ELECTROWEB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.ELECTRIC,
					power:					55,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.EMBARGO => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Embargo,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.EMBER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					40,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ENCORE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Encore,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ENDEAVOR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Endeavor,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ENDURE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Endure,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ENERGY_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.GRASS,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.ENTRAINMENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Doodle,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ERUPTION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Eruption,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ESPER_WING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedUp,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.ETERNABEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.DRAGON,
					power:					160,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.EXPANDING_FORCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ExpandingForce,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.EXPLOSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Explosion,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					250,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.EXTRASENSORY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.EXTREME_SPEED => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				2,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FACADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Facade,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FAIRY_LOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FairyLock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FAIRY_WIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FAKE_OUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FakeOut,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				3,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FAKE_TEARS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialDefenseDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FALSE_SURRENDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FALSE_SWIPE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FalseSwipe,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FEATHER_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FEINT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_RemoveProtectionHit,
					moveType:				Type.NORMAL,
					power:					30,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				2,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FEINT_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FELL_STINGER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FellStinger,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					50,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIERY_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackUp,
					moveType:				Type.FIRE,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIERY_WRATH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DARK,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FILLET_AWAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FilletAway,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.FINAL_GAMBIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FinalGambit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIRE_BLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					110,
					accuracy:				85,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FIRE_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bite,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					65,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BITE_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FIRE_LASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.FIRE,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIRE_PLEDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FirePledge,
					moveType:				Type.FIRE,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIRE_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PUNCH_MOVE | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FIRE_SPIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FireSpin,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					35,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FIRST_IMPRESSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FakeOut,
					moveType:				Type.BUG,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				2,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FISHIOUS_REND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FishiousRend,
					moveType:				Type.WATER,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BITE_MOVE | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FISSURE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OHKO,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				30,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HITS_SEMI_INVUL_GROUND
				),
				BattleMoveID.FLAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Flail,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLAME_BURST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlameBurst,
					moveType:				Type.FIRE,
					power:					70,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLAME_CHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedUp,
					moveType:				Type.FIRE,
					power:					50,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLAME_WHEEL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					60,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.THAWS_USER
				),
				BattleMoveID.FLAMETHROWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FLARE_BLITZ => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.THAWS_USER
				),
				BattleMoveID.FLASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AccuracyDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.USABLE_OUT_OF_BATTLE
				),
				BattleMoveID.FLASH_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.STEEL,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLATTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Flatter,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FLEUR_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDown2,
					moveType:				Type.FAIRY,
					power:					130,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Fling,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLIP_TURN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_UTurn,
					moveType:				Type.WATER,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLORAL_HEALING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FloralHealing,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.ALWAYS_HIT | Flag.HEALING_MOVE
				),
				BattleMoveID.FLOWER_SHIELD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FlowerShield,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.FLOWER_TRICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					70,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FLY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Fly,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					90,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED_OPPONENT,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.USABLE_OUT_OF_BATTLE | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.FLYING_PRESS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FOCUS_BLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.FIGHTING,
					power:					120,
					accuracy:				70,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.FOCUS_ENERGY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FocusEnergy,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.FOCUS_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FocusPunch,
					moveType:				Type.FIGHTING,
					power:					150,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-3,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED
				),
				BattleMoveID.FOLLOW_ME => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FollowMe,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				2,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.FORCE_PALM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.FIGHTING,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FORESIGHT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Foresight,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.FOREST_S_CURSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ForestsCurse,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.FOUL_PLAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FoulPlay,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					95,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FREEZE_SHOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FreezeShock,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ICE,
					power:					140,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.FREEZE_DRY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FREEZING_GLARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.PSYCHIC,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FRENZY_PLANT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.GRASS,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FROST_BREATH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					60,
					accuracy:				90,
					pp:						0,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.ALWAYS_CRITICAL | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FRUSTRATION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Frustration,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FURY_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					15,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FURY_CUTTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FuryCutter,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					40,
					accuracy:				95,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SHARPNESS_AFFECTED
				),
				BattleMoveID.FURY_SWIPES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					18,
					accuracy:				80,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FUSION_BOLT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FusionBolt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FUSION_FLARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FusionFlare,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.FUTURE_SIGHT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FutureSight,
					moveType:				Type.PSYCHIC,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: 0
				),
				BattleMoveID.GASTRO_ACID => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GastroAcid,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.GEAR_GRIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					50,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GEAR_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GearUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.GEOMANCY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Geomancy,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.CHARGING_TURN
				),
				BattleMoveID.GIGA_DRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.LIQUID_OOZE_AFFECTED | Flag.BIG_ROOT_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.GIGA_IMPACT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.NORMAL,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GIGATON_HAMMER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					160,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CANNOT_USE_MOVE_TWICE
				),
				BattleMoveID.GLACIAL_LANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GLACIATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.ICE,
					power:					65,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.GLAIVE_RUSH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_GlaiveRush,
					moveType:				Type.DRAGON,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GLARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ParalyzeHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.GRASS_KNOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GrassKnot,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GRASS_PLEDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_GrassPledge,
					moveType:				Type.GRASS,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GRASS_WHISTLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				55,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.GRASSY_TERRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GrassyTerrain,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.GRAV_APPLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GravApple,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GRAVITY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Gravity,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.GROWL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.GROWTH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Growth,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.GRUDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Grudge,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.GUARD_SPLIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GuardSplit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.GUARD_SWAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GuardSwap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.GUILLOTINE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OHKO,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				30,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED
				),
				BattleMoveID.GUNK_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					120,
					accuracy:				80,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.GUST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Gust,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					40,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_AIR
				),
				BattleMoveID.GYRO_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_GyroBall,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BULLETPROOF_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hail,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.HAMMER_ARM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDown,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HAPPY_HOUR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HappyHour,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.HARDEN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.HAZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Haze,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.HEAD_CHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilQuarterDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HEAD_SMASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilHalfDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					150,
					accuracy:				80,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HEADBUTT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.HEADLONG_RUSH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefAndSpdefDown,
					moveType:				Type.GROUND,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HEAL_BELL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_CureNonVolatileStatusHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD_AND_PARTY,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.HEAL_BLOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealBlock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.HEAL_ORDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.HEAL_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalfHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PULSE_MOVE | Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED
				),
				BattleMoveID.HEALING_WISH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealingWish,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.HEART_STAMP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.PSYCHIC,
					power:					60,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.HEART_SWAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HeartSwap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.HEAT_CRASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HeavySlam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HEAT_WAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					95,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HEAVY_SLAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HeavySlam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT_MINIMIZE
				),
				BattleMoveID.HELPING_HAND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HelpingHand,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED_ALLY,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.HITS_SEMI_INVUL_GROUND | Flag.HITS_SEMI_INVUL_WATER | Flag.HITS_SEMI_INVUL_AIR
				),
				BattleMoveID.HEX => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hex,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					65,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HIDDEN_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HiddenPower,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HIGH_HORSEPOWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					95,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HIGH_JUMP_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_JumpKick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					130,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.GRAVITY_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HOLD_BACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FalseSwipe,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HONE_CLAWS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkDefAccUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.HORN_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					65,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HORN_DRILL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OHKO,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				30,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED
				),
				BattleMoveID.HORN_LEECH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.LIQUID_OOZE_AFFECTED | Flag.BIG_ROOT_AFFECTED
				),
				BattleMoveID.HOWL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.HURRICANE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Gust,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.FLYING,
					power:					110,
					accuracy:				70,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_AIR | Flag.ALWAYS_HIT_RAIN
				),
				BattleMoveID.HYDRO_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.WATER,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYDRO_PUMP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					110,
					accuracy:				80,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYDRO_STEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HydroSteam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYPER_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.NORMAL,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYPER_DRILL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYPER_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.BITE_MOVE
				),
				BattleMoveID.HYPER_VOICE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.HYPERSPACE_FURY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HyperspaceFury,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					100,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.HYPERSPACE_HOLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_RemoveProtectionHit,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.HYPNOSIS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				60,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ICE_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Rollout,
					moveType:				Type.ICE,
					power:					30,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ICE_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ICE_BURN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_IceBurn,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.ICE,
					power:					140,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.ICE_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bite,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					65,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.BITE_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ICE_HAMMER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDown2,
					moveType:				Type.ICE,
					power:					100,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ICE_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ICE_SHARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ICE_SPINNER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ClearTerrain,
					moveType:				Type.ICE,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ICICLE_CRASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.ICE,
					power:					85,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ICICLE_SPEAR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					25,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ICY_WIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.ICE,
					power:					55,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.IMPRISON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Imprison,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.INCINERATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Incinerate,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.INFERNAL_PARADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_InfernalParade,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.GHOST,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.INFERNO => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					100,
					accuracy:				50,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.INFESTATION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Infestation,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					20,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.INGRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Ingrain,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.INSTRUCT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Instruct,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED
				),
				BattleMoveID.ION_DELUGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_IonDeluge,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				1,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.IRON_DEFENSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.IRON_HEAD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.STEEL,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.IRON_TAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.STEEL,
					power:					100,
					accuracy:				75,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.JAW_LOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Trap,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.JET_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.JUDGMENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Judgment,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					100,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.JUMP_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_JumpKick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					100,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.GRAVITY_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.JUNGLE_HEALING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_JungleHealing,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.KARATE_CHOP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					50,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.KINESIS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AccuracyDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				80,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.KING_S_SHIELD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_KingsShield,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.KNOCK_OFF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_KnockOff,
					moveType:				Type.DARK,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.KOWTOW_CLEAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					85,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LAND_S_WRATH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LASER_FOCUS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LaserFocus,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.LASH_OUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_LashOut,
					moveType:				Type.DARK,
					power:					75,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LAST_RESORT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LastResort,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					140,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LAST_RESPECTS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LastRespects,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LAVA_PLUME => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEAF_BLADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEAF_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDown2,
					moveType:				Type.GRASS,
					power:					130,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEAF_TORNADO => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.GRASS,
					power:					65,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEAFAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					40,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEECH_LIFE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BIG_ROOT_AFFECTED | Flag.LIQUID_OOZE_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LEECH_SEED => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LeechSeed,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.LEER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.LICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.GHOST,
					power:					30,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.LIFE_DEW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealQuarter,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.LIGHT_OF_RUIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilHalfDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					140,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LIGHT_SCREEN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LightScreen,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.LIQUIDATION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.WATER,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LOCK_ON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LockOn,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.LOVELY_KISS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				75,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.LOW_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LowKick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LOW_SWEEP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.FIGHTING,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LUCKY_CHANT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LuckyChant,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.LUMINA_CRASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit2,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LUNAR_BLESSING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LunarBlessing,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.LUNAR_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LunarDance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.LUNGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.BUG,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.LUSTER_PURGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.PSYCHIC,
					power:					70,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MACH_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MAGIC_COAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MagicCoat,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.MAGIC_POWDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MagicPowder,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MAGIC_ROOM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MagicRoom,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MAGICAL_LEAF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MAGMA_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MagmaStorm,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					100,
					accuracy:				75,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MAGNET_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MAGNET_RISE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MagnetRise,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.MAGNETIC_FLUX => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefAndSpdefUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.MAGNITUDE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Magnitude,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_GROUND
				),
				BattleMoveID.MAKE_IT_RAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_MakeItRain,
					moveType:				Type.STEEL,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MAT_BLOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MatBlock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.ME_FIRST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MeFirst,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED
				),
				BattleMoveID.MEAN_LOOK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MeanLook,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MEDITATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.MEGA_DRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					40,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BIG_ROOT_AFFECTED | Flag.LIQUID_OOZE_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MEGA_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				70,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MEGA_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MEGAHORN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					120,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MEMENTO => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Memento,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.METAL_BURST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MetalBurst,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.METAL_CLAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackUp,
					moveType:				Type.STEEL,
					power:					50,
					accuracy:				95,
					pp:						35,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.METAL_SOUND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialDefenseDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				85,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.METEOR_ASSAULT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.FIGHTING,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.METEOR_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MeteorBeam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					120,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.METEOR_MASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackUp,
					moveType:				Type.STEEL,
					power:					90,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.METRONOME => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Metronome,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK
				),
				BattleMoveID.MILK_DRINK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.USABLE_OUT_OF_BATTLE | Flag.HEALING_MOVE
				),
				BattleMoveID.MIMIC => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MirrorMove,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.MIND_BLOWN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MindBlown,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MIND_READER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LockOn,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MINIMIZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Minimize,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.MIRACLE_EYE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MiracleEye,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MIRROR_COAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MirrorCoat,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				-5,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MIRROR_MOVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MirrorMove,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.CANNOT_BE_SKETCHED | Flag.UNUSABLE_BY_SLEEP_TALK
				),
				BattleMoveID.MIRROR_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.STEEL,
					power:					65,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MIST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Mist,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.MIST_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.PSYCHIC,
					power:					70,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MISTY_EXPLOSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MistyExplosion,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MISTY_TERRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MistyTerrain,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.MOONBLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.FAIRY,
					power:					95,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MOONGEIST_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_MoongeistBeam,
					moveType:				Type.GHOST,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MOONLIGHT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Synthesis,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.MORNING_SUN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Synthesis,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.MORTAL_SPIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RapidSpin,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					30,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MOUNTAIN_GALE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.ICE,
					power:					100,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MUD_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.GROUND,
					power:					65,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MUD_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.GROUND,
					power:					55,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MUD_SPORT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MudSport,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.MUD_SLAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.GROUND,
					power:					20,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.MUDDY_WATER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.WATER,
					power:					90,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MULTI_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_MultiAttack,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MYSTICAL_FIRE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackUp,
					moveType:				Type.FIRE,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.MYSTICAL_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MysticalPower,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					70,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.NASTY_PLOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialAttackUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.NATURAL_GIFT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_NaturalGift,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.NATURE_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_NaturePower,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.NATURE_S_MADNESS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_NaturesMadness,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.NEEDLE_ARM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.GRASS,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.NIGHT_DAZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.DARK,
					power:					85,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	40,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.NIGHT_SHADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LevelDamage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.NIGHT_SLASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					70,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.NIGHTMARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Nightmare,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.NO_RETREAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_NoRetreat,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.NOBLE_ROAR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkAndSpatkDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.NUZZLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					20,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.OBLIVION_WING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb75Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.OBSTRUCT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Obstruct,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.OCTAZOOKA => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AccuracyDownHit,
					moveType:				Type.WATER,
					power:					65,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.OCTOLOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Octolock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ODOR_SLEUTH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OdorSleuth,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.OMINOUS_WIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AllStatsUp,
					moveType:				Type.GHOST,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ORDER_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OrderUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ORIGIN_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					110,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MEGA_LAUNCHER_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.OUTRAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Outrage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.OVERDRIVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.OVERHEAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDown2,
					moveType:				Type.FIRE,
					power:					130,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PAIN_SPLIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PainSplit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT | Flag.IGNORE_TYPE_EFF
				),
				BattleMoveID.PARABOLIC_CHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Absorb50Percent,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.LIQUID_OOZE_AFFECTED | Flag.BIG_ROOT_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PARTING_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PartingShot,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.PAY_DAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PayDay,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PAYBACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Payback,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PECK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					35,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PERISH_SONG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PerishSong,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SOUND_MOVE
				),
				BattleMoveID.PETAL_BLIZZARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PETAL_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Outrage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PHANTOM_FORCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PhantomForce,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.PHOTON_GEYSER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PhotonGeyser,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PIN_MISSILE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					25,
					accuracy:				95,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PLASMA_FISTS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PlasmaFists,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					100,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PLAY_NICE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.PLAY_ROUGH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.FAIRY,
					power:					90,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PLUCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Pluck,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POISON_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Toxic,
					moveType:				Type.POISON,
					power:					50,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BITE_MOVE | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POISON_GAS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PoisonHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				90,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POISON_JAB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					80,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POISON_POWDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PoisonHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				75,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POISON_STING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					15,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POISON_TAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					50,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POLLEN_PUFF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PollenPuff,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.POLTERGEIST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Poltergeist,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					110,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POPULATION_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PopulationBomb,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					20,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POUNCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.BUG,
					power:					50,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POUND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POWDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Powder,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POWDER_SNOW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FreezeHit,
					moveType:				Type.ICE,
					power:					40,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POWER_GEM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					80,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POWER_SHIFT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PowerShift,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POWER_SPLIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PowerSplit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.POWER_SWAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PowerSwap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.POWER_TRICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PowerTrick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.POWER_TRIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Punishment,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					20,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POWER_WHIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					120,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.POWER_UP_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackUp,
					moveType:				Type.FIGHTING,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PRECIPICE_BLADES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					120,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PRESENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Present,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PRISMATIC_LASER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.PSYCHIC,
					power:					160,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PROTECT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Protect,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.PSYBEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.PSYCHIC,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.PSYBLADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Psyblade,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYCH_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PsychUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.PSYCHIC => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.PSYCHIC,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.PSYCHIC_FANGS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PsychicFangs,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BITE_MOVE
				),
				BattleMoveID.PSYCHIC_TERRAIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PsychicTerrain,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.PSYCHO_BOOST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDown2,
					moveType:				Type.PSYCHIC,
					power:					140,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYCHO_CUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYCHO_SHIFT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PsychoShift,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.PSYSHIELD_BASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseUp,
					moveType:				Type.PSYCHIC,
					power:					70,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYSHOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Psyshock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYSTRIKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Psyshock,
					moveType:				Type.PSYCHIC,
					power:					100,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PSYWAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Psywave,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PUNISHMENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Punishment,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PURIFY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Purify,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.PURSUIT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Pursuit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.PYRO_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					120,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.BULLETPROOF_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.THAWS_USER
				),
				BattleMoveID.QUASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Quash,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.QUICK_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.QUICK_GUARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_QuickGuard,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				3,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.QUIVER_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpatkSpdefSpdUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.RAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					20,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAGE_FIST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_RageFist,
					moveType:				Type.GHOST,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAGE_POWDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FollowMe,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				2,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.RAGING_BULL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PsychicFangs,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAGING_FURY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Outrage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAIN_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RainDance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.RAPID_SPIN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RapidSpin,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				100,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAZOR_LEAF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					55,
					accuracy:				95,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HIGH_CRITICAL | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RAZOR_SHELL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.WATER,
					power:					75,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.RAZOR_WIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RazorWind,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL | Flag.CHARGING_TURN
				),
				BattleMoveID.RECOVER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.RECYCLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Recycle,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.REFLECT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Reflect,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.REFLECT_TYPE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ReflectType,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED
				),
				BattleMoveID.REFRESH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Refresh,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.RELIC_SONG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SleepHit,
					moveType:				Type.NORMAL,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.REST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Rest,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.RETALIATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Retaliate,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RETURN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Return,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.REVELATION_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RevelationDance,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.REVENGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Revenge,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-4,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.REVERSAL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Flail,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.REVIVAL_BLESSING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RevivalBlessing,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						1,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.RISING_VOLTAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RisingVoltage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROAR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Roar,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-6,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE | Flag.ALWAYS_HIT
				),
				BattleMoveID.ROAR_OF_TIME => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.DRAGON,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROCK_BLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					25,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROCK_CLIMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROCK_POLISH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.ROCK_SLIDE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.ROCK,
					power:					75,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ROCK_SMASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.FIGHTING,
					power:					40,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ROCK_THROW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					50,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROCK_TOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.ROCK,
					power:					60,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ROCK_WRECKER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Recharge,
					moveType:				Type.ROCK,
					power:					150,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.ROLE_PLAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RolePlay,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ROLLING_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.FIGHTING,
					power:					60,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ROLLOUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Rollout,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					30,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.ROOST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Roost,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.ROTOTILLER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Rototiller,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.ROUND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Round,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					60,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.RUINATION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SuperFang,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SACRED_FIRE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackAndThawHit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					100,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	50,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SACRED_SWORD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ChipAway,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHIP_AWAY | Flag.SHARPNESS_AFFECTED
				),
				BattleMoveID.SAFEGUARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Safeguard,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SALT_CURE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SaltCure,
					moveType:				Type.ROCK,
					power:					40,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SAND_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AccuracyDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SAND_TOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SandTomb,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					35,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SANDSEAR_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.GROUND,
					power:					100,
					accuracy:				80,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT_RAIN
				),
				BattleMoveID.SANDSTORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Sandstorm,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SCALD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackAndThawHit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SCALE_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ScaleShot,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					25,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SCARY_FACE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SCORCHING_SANDS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ScorchingSands,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.GROUND,
					power:					70,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.THAWS_USER
				),
				BattleMoveID.SCRATCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SCREECH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				85,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.SEARING_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.FIRE,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SECRET_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SecretPower,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SECRET_SWORD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SecretSword,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SEED_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.SEED_FLARE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit2,
					moveType:				Type.GRASS,
					power:					120,
					accuracy:				85,
					pp:						5,
					secondaryEffectChance:	40,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SEISMIC_TOSS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_LevelDamage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SELF_DESTRUCT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Explosion,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					200,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHADOW_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialDefenseDownHit,
					moveType:				Type.GHOST,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.SHADOW_BONE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.GHOST,
					power:					85,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHADOW_CLAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					70,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHADOW_FORCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ShadowForce,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.SHADOW_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHADOW_SNEAK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHARPEN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SHED_TAIL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Substitute,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SHEER_COLD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_OHKO,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				30,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED
				),
				BattleMoveID.SHELL_SIDE_ARM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ShellSideArm,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHELL_SMASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ShellSmash,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SHELL_TRAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ShellTrap,
					moveType:				Type.FIRE,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				-3,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHELTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SHIFT_GEAR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ShiftGear,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SHOCK_WAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SHORE_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ShoreUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.SIGNAL_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.BUG,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SILK_TRAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SilkTrap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.SILVER_WIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AllStatsUp,
					moveType:				Type.BUG,
					power:					60,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SIMPLE_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SimpleBeam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				55,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.SKETCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Sketch,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						1,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.CANNOT_BE_SKETCHED | Flag.UNUSABLE_BY_SLEEP_TALK | Flag.ALWAYS_HIT
				),
				BattleMoveID.SKILL_SWAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SkillSwap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SKITTER_SMACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.BUG,
					power:					70,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SKULL_BASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SkullBash,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					130,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.SKY_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SkyAttack,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.FLYING,
					power:					140,
					accuracy:				90,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.CHARGING_TURN | Flag.HIGH_CRITICAL
				),
				BattleMoveID.SKY_DROP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SkyDrop,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SEMI_INVUL_TURN
				),
				BattleMoveID.SKY_UPPERCUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Gust,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					85,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_AIR
				),
				BattleMoveID.SLACK_OFF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.SLAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				75,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SLASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SLEEP_POWDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				75,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SLEEP_TALK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepTalk,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.CANNOT_BE_SKETCHED | Flag.USABLE_WHILE_ASLEEP | Flag.UNUSABLE_BY_SLEEP_TALK
				),
				BattleMoveID.SLUDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SLUDGE_BOMB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.BULLETPROOF_AFFECTED
				),
				BattleMoveID.SLUDGE_WAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					95,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SMACK_DOWN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SmackDown,
					secondaryEffect:		MoveEffects.Effect_GroundHit,
					moveType:				Type.ROCK,
					power:					50,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_AIR
				),
				BattleMoveID.SMART_STRIKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.STEEL,
					power:					70,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SMELLING_SALTS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SmellingSalts,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					70,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SMOG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.POISON,
					power:					30,
					accuracy:				70,
					pp:						20,
					secondaryEffectChance:	40,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SMOKESCREEN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AccuracyDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SNAP_TRAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SnapTrap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					35,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SNARL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.DARK,
					power:					55,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SNATCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Snatch,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				40,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SNIPE_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SnipeShot,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.SNORE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Snore,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.SOUND_MOVE | Flag.USABLE_WHILE_ASLEEP
				),
				BattleMoveID.SNOWSCAPE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Snowscape,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SOAK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Soak,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SOFT_BOILED => new BattleMove(
					primaryEffect:			MoveEffects.Effect_HealHalf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.USABLE_OUT_OF_BATTLE | Flag.HEALING_MOVE
				),
				BattleMoveID.SOLAR_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SolarBeam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.SOLAR_BLADE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SolarBeam,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					125,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.CHARGING_TURN
				),
				BattleMoveID.SONIC_BOOM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Sonicboom,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPACIAL_REND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DRAGON,
					power:					100,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HIGH_CRITICAL2 | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPARK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SPARKLING_ARIA => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_CureBurnHit,
					moveType:				Type.WATER,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPECTRAL_THIEF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpectralThief,
					moveType:				Type.GHOST,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPEED_SWAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedSwap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.SPICY_EXTRACT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpicyExtract,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.SPIDER_WEB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpiderWeb,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SPIKE_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					20,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPIKES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Spikes,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL_OPPONENTS,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.SPIKY_SHIELD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpikyShield,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				4,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECTS
				),
				BattleMoveID.SPIN_OUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedDown2,
					moveType:				Type.STEEL,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPIRIT_BREAK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.FAIRY,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPIRIT_SHACKLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_Trap,
					moveType:				Type.GHOST,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPIT_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpitUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPITE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Spite,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SPLASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Splash,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SPORE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SleepHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SPOTLIGHT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_FollowMe,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				3,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED
				),
				BattleMoveID.SPRINGTIDE_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.FAIRY,
					power:					100,
					accuracy:				80,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.STEALTH_ROCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_StealthRock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL_OPPONENTS,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.STEAM_ERUPTION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SteamEruption,
					secondaryEffect:		MoveEffects.Effect_BurnHit,
					moveType:				Type.WATER,
					power:					110,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.THAWS_USER
				),
				BattleMoveID.STEAMROLLER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.BUG,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.DOUBLE_DAMAGE_MINIMIZE
				),
				BattleMoveID.STEEL_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_RecoilHalfMaxHp,
					moveType:				Type.STEEL,
					power:					140,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STEEL_ROLLER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ClearTerrain,
					moveType:				Type.STEEL,
					power:					130,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STEEL_WING => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseUp,
					moveType:				Type.STEEL,
					power:					70,
					accuracy:				90,
					pp:						25,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STICKY_WEB => new BattleMove(
					primaryEffect:			MoveEffects.Effect_StickyWeb,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL_OPPONENTS,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.STOCKPILE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Stockpile,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.STOMP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.NORMAL,
					power:					65,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.STOMPING_TANTRUM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_StompingTantrum,
					moveType:				Type.GROUND,
					power:					75,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STONE_AXE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_StealthRock,
					moveType:				Type.ROCK,
					power:					65,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.STONE_EDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					100,
					accuracy:				80,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.HIGH_CRITICAL | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STORED_POWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_StoredPower,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					20,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STORM_THROW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					60,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.ALWAYS_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STRANGE_STEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.FAIRY,
					power:					90,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STRENGTH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STRENGTH_SAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_StrengthSap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.STRING_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpeedDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				95,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.STRUGGLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Struggle,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NONE,
					power:					50,
					accuracy:				0,
					pp:						255,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_RANDOM,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.CANNOT_BE_SKETCHED | Flag.UNUSABLE_BY_SLEEP_TALK | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.STRUGGLE_BUG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackDownHit,
					moveType:				Type.BUG,
					power:					50,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.STUFF_CHEEKS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_StuffCheeks,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.STUN_SPORE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ParalyzeHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				75,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SUBMISSION => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilQuarterDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					80,
					accuracy:				80,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SUBSTITUTE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Substitute,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SUCKER_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SuckerPunch,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					70,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SUNNY_DAY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SunnyDay,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.SUNSTEEL_STRIKE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SunsteelStrike,
					moveType:				Type.STEEL,
					power:					100,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SUPER_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SuperFang,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SUPERPOWER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AtkDefDown,
					moveType:				Type.FIGHTING,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SUPERSONIC => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ConfuseHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				55,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SOUND_MOVE | Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SURF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Surf,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_WATER
				),
				BattleMoveID.SURGING_STRIKES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SurgingStrikes,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					25,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_CRITICAL
				),
				BattleMoveID.SWAGGER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Swagger,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SWALLOW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Swallow,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SWEET_KISS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ConfuseHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FAIRY,
					power:					0,
					accuracy:				75,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SWEET_SCENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_EvasionDownHit2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.USABLE_OUT_OF_BATTLE
				),
				BattleMoveID.SWIFT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					60,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.ALWAYS_HIT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SWITCHEROO => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Switcheroo,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.SWORDS_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AttackUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.SYNCHRONOISE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Synchronoise,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.SYNTHESIS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Synthesis,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.TACKLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					40,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TAIL_GLOW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_SpecialAttackUp2,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.TAIL_SLAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					25,
					accuracy:				85,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TAIL_WHIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseDownHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TAILWIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Tailwind,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.TAKE_DOWN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilQuarterDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				85,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TAKE_HEART => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TakeHeart,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.TAR_SHOT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TarShot,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TAUNT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Taunt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TEARFUL_LOOK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TearfulLook,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.TEATIME => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Teatime,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.TECHNO_BLAST => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TechnoBlast,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TEETER_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ConfuseHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_FOES_AND_ALLY,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TELEKINESIS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Telekinesis,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED
				),
				BattleMoveID.TELEPORT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Teleport,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.USABLE_OUT_OF_BATTLE
				),
				BattleMoveID.TERRAIN_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TerrainPulse,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.MEGA_LAUNCHER_AFFECTED
				),
				BattleMoveID.THIEF => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Thief,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					60,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.THOUSAND_ARROWS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ThousandArrows,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GROUND,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_AIR | Flag.HITS_UNGROUNDED | Flag.IGNORE_TYPE_EFF
				),
				BattleMoveID.THOUSAND_WAVES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ThousandWaves,
					moveType:				Type.GROUND,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.THRASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Outrage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.THROAT_CHOP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ThroatChop,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.THUNDER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					110,
					accuracy:				70,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.HITS_SEMI_INVUL_AIR | Flag.ALWAYS_HIT_RAIN | Flag.ACC_LOSS_IN_SUNLIGHT
				),
				BattleMoveID.THUNDER_CAGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ThunderCage,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					80,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.THUNDER_FANG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Bite,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					65,
					accuracy:				95,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.BITE_MOVE
				),
				BattleMoveID.THUNDER_PUNCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					75,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.THUNDER_SHOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.THUNDER_WAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ParalyzeHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					0,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.THUNDERBOLT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.THUNDEROUS_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_DefenseDownHit,
					moveType:				Type.FIGHTING,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TICKLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Tickle,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TIDY_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TidyUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.TOPSY_TURVY => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TopsyTurvy,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.TORCH_SONG => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpecialAttackUp,
					moveType:				Type.FIRE,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.TORMENT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Torment,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					0,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TOXIC => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ToxicHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TOXIC_SPIKES => new BattleMove(
					primaryEffect:			MoveEffects.Effect_ToxicSpikes,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL_OPPONENTS,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.ENTRY_HAZARD
				),
				BattleMoveID.TOXIC_THREAD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_PoisonHit,
					secondaryEffect:		MoveEffects.Effect_SpeedDownHit,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TRAILBLAZE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_SpeedUp,
					moveType:				Type.GRASS,
					power:					50,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TRANSFORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Transform,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.ALWAYS_HIT | Flag.IGNORE_TYPE_EFF
				),
				BattleMoveID.TRI_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_TriAttack,
					moveType:				Type.NORMAL,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TRICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Trick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TRICK_ROOM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TrickRoom,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				7,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TRICK_OR_TREAT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TrickOrTreat,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GHOST,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TRIPLE_ARROWS => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_TripleArrows,
					moveType:				Type.FIGHTING,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HIGH_CRITICAL
				),
				BattleMoveID.TRIPLE_AXEL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TripleAxel,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ICE,
					power:					20,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TRIPLE_DIVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TripleDive,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					30,
					accuracy:				95,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TRIPLE_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TripleKick,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					10,
					accuracy:				90,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TROP_KICK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_AttackDownHit,
					moveType:				Type.GRASS,
					power:					70,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TRUMP_CARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_TrumpCard,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.TWIN_BEAM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					40,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.TWINEEDLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DoubleHit,
					secondaryEffect:		MoveEffects.Effect_PoisonHit,
					moveType:				Type.BUG,
					power:					25,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.TWISTER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Gust,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.DRAGON,
					power:					40,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.HITS_SEMI_INVUL_AIR
				),
				BattleMoveID.U_TURN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_UTurn,
					moveType:				Type.BUG,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.UPROAR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Uproar,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					90,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.UNUSABLE_BY_SLEEP_TALK | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.SOUND_MOVE
				),
				BattleMoveID.V_CREATE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_VCreate,
					moveType:				Type.FIRE,
					power:					180,
					accuracy:				95,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VACUUM_WAVE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					40,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VENOM_DRENCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_VenomDrench,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					0,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED
				),
				BattleMoveID.VENOSHOCK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Venoshock,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.POISON,
					power:					65,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VICTORY_DANCE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkDefSpdUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.VINE_WHIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					45,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VISE_GRIP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					55,
					accuracy:				100,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VITAL_THROW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIGHTING,
					power:					70,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-1,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.ALWAYS_HIT | Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VOLT_SWITCH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_UTurn,
					moveType:				Type.ELECTRIC,
					power:					70,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.VOLT_TACKLE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	10,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WAKE_UP_SLAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WakeUpSlap,
					secondaryEffect:		MoveEffects.Effect_WakeUpHit,
					moveType:				Type.FIGHTING,
					power:					70,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WATER_GUN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					40,
					accuracy:				100,
					pp:						25,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WATER_PLEDGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_WaterPledge,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WATER_PULSE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ConfuseHit,
					moveType:				Type.WATER,
					power:					60,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WATER_SHURIKEN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_MultiHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					15,
					accuracy:				100,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				1,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WATER_SPORT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WaterSport,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				0,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: 0
				),
				BattleMoveID.WATER_SPOUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Eruption,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					150,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.WATERFALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.WATER,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.WAVE_CRASH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					120,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WEATHER_BALL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_WeatherBall,
					moveType:				Type.NORMAL,
					power:					50,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WHIRLPOOL => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Whirlpool,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					35,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.HITS_SEMI_INVUL_WATER
				),
				BattleMoveID.WHIRLWIND => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Roar,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				-6,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.HITS_SEMI_INVUL_AIR | Flag.ALWAYS_HIT
				),
				BattleMoveID.WICKED_BLOW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.DARK,
					power:					80,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.ALWAYS_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WIDE_GUARD => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WideGuard,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ROCK,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER_FIELD,
					priority:				3,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.WILD_CHARGE => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilQuarterDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.ELECTRIC,
					power:					90,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WILDBOLT_STORM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					100,
					accuracy:				80,
					pp:						10,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_OPPONENTS_FIELD,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED | Flag.ALWAYS_HIT_RAIN
				),
				BattleMoveID.WILL_O_WISP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_BurnHit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FIRE,
					power:					0,
					accuracy:				85,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.WING_ATTACK => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.FLYING,
					power:					60,
					accuracy:				100,
					pp:						35,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ANY_NOT_USER,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WISH => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Wish,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED | Flag.HEALING_MOVE
				),
				BattleMoveID.WITHDRAW => new BattleMove(
					primaryEffect:			MoveEffects.Effect_DefenseUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.WATER,
					power:					0,
					accuracy:				0,
					pp:						40,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.WONDER_ROOM => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WonderRoom,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.PSYCHIC,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_ALL,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.WOOD_HAMMER => new BattleMove(
					primaryEffect:			MoveEffects.Effect_RecoilThirdDealt,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					120,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WORK_UP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_AtkAndSpatkUp,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						30,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_USER,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.SNATCH_AFFECTED
				),
				BattleMoveID.WORRY_SEED => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WorrySeed,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.GRASS,
					power:					0,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.WRAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Wrap,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					15,
					accuracy:				90,
					pp:						20,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.WRING_OUT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_WringOut,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				100,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.X_SCISSOR => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.BUG,
					power:					80,
					accuracy:				100,
					pp:						15,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.SHARPNESS_AFFECTED | Flag.HIGH_CRITICAL | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.KINGS_ROCK_AFFECTED
				),
				BattleMoveID.YAWN => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Yawn,
					secondaryEffect:		MoveEffects.Effect_None,
					moveType:				Type.NORMAL,
					power:					0,
					accuracy:				0,
					pp:						10,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.STATUS,
					flags: Flag.PROTECT_AFFECTED | Flag.MAGIC_COAT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED | Flag.ALWAYS_HIT
				),
				BattleMoveID.ZAP_CANNON => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_ParalyzeHit,
					moveType:				Type.ELECTRIC,
					power:					120,
					accuracy:				50,
					pp:						5,
					secondaryEffectChance:	100,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.SPECIAL,
					flags: Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ZEN_HEADBUTT => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.PSYCHIC,
					power:					80,
					accuracy:				90,
					pp:						15,
					secondaryEffectChance:	20,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),
				BattleMoveID.ZING_ZAP => new BattleMove(
					primaryEffect:			MoveEffects.Effect_Hit,
					secondaryEffect:		MoveEffects.Effect_FlinchHit,
					moveType:				Type.ELECTRIC,
					power:					80,
					accuracy:				100,
					pp:						10,
					secondaryEffectChance:	30,
					target:					MOVE_TARGET_SELECTED,
					priority:				0,
					moveCat:				MoveCategory.PHYSICAL,
					flags: Flag.MAKES_CONTACT | Flag.PROTECT_AFFECTED | Flag.MIRROR_MOVE_AFFECTED
				),

				_ => throw new Strings.MoveNotRecognizedException(move)
			};
		}
	}
	
	public enum MoveCategory {
		PHYSICAL,
		SPECIAL,
		STATUS,
		NONE
	};

	public struct MoveEffectParams {
		public MoveEffectParams(Battle battle, BattleState state, BattleMon attacker, BattleMon target, BattleMove move, BattleMoveID moveID, u8 slotAttacker, u8 slotTarget, u8 numTargets, u8 actionIndex, bool isPrimaryEffect, u16 i_flags) {
            this.battle = battle;
            this.state = state;
            this.attacker = attacker;
            this.target = target;
            this.move = move;
            this.moveID = moveID;
            this.slotAttacker = slotAttacker;
            this.slotTarget = slotTarget;
            this.numTargets = numTargets;
            this.actionIndex = actionIndex;
            this.isPrimaryEffect = isPrimaryEffect;
            this.i_flags = i_flags;
        }

		public readonly Battle battle;
		public readonly BattleState state;
		public readonly BattleMon attacker;
		public readonly BattleMon target;
		public readonly BattleMove move;
		public readonly BattleMoveID moveID;
		public readonly u8 slotAttacker;
		public readonly u8 slotTarget;
		public readonly u8 numTargets;
		public readonly u8 actionIndex;
		public bool isPrimaryEffect;
		public u16 i_flags;
	};

	public delegate Task<u32> Effect(MoveEffectParams p);

	public class BattleMove {
		public BattleMove(Effect primaryEffect, Effect secondaryEffect, Type moveType, u8 power, u8 accuracy, u8 pp, u8 secondaryEffectChance, u32 target, sbyte priority, MoveCategory moveCat, BattleMoves.Flag flags) {
            this.primaryEffect = primaryEffect;
            this.secondaryEffect = secondaryEffect;
            this.moveType = moveType;
            this.power = power;
            this.accuracy = accuracy;
            this.pp = pp;
            this.secondaryEffectChance = secondaryEffectChance;
            this.target = target;
            this.priority = priority;
            this.moveCat = moveCat;
            this.flags = flags;
        }

		public readonly Effect primaryEffect;
		public readonly Effect secondaryEffect;
		public readonly Type moveType;
		public readonly u8 power;
		public readonly u8 accuracy;
		public readonly u8 pp;
		public readonly u8 secondaryEffectChance;
		public readonly u32 target;
		public readonly sbyte priority;
		public readonly MoveCategory moveCat;
		public readonly BattleMoves.Flag flags;
	};

	public enum BattleMoveID {
		NONE,
		//10_000_000_VOLT_THUNDERBOLT,
		ABSORB,
		ACCELEROCK,
		ACID,
		ACID_ARMOR,
		//ACID_DOWNPOUR,
		ACID_SPRAY,
		ACROBATICS,
		ACUPRESSURE,
		AERIAL_ACE,
		AEROBLAST,
		AFTER_YOU,
		AGILITY,
		AIR_CUTTER,
		AIR_SLASH,
		//ALL_OUT_PUMMELING,
		ALLY_SWITCH,
		AMNESIA,
		ANCHOR_SHOT,
		ANCIENT_POWER,
		APPLE_ACID,
		AQUA_CUTTER,
		AQUA_JET,
		AQUA_RING,
		AQUA_STEP,
		AQUA_TAIL,
		ARM_THRUST,
		ARMOR_CANNON,
		AROMATHERAPY,
		AROMATIC_MIST,
		ASSIST,
		ASSURANCE,
		ASTONISH,
		ASTRAL_BARRAGE,
		ATTACK_ORDER,
		ATTRACT,
		AURA_SPHERE,
		AURA_WHEEL,
		AURORA_BEAM,
		AURORA_VEIL,
		AUTOTOMIZE,
		AVALANCHE,
		AXE_KICK,
		BABY_DOLL_EYES,
		//BADDY_BAD,
		BANEFUL_BUNKER,
		BARB_BARRAGE,
		BARRAGE,
		BARRIER,
		BATON_PASS,
		BEAK_BLAST,
		BEAT_UP,
		BEHEMOTH_BASH,
		BEHEMOTH_BLADE,
		BELCH,
		BELLY_DRUM,
		BESTOW,
		BIDE,
		BIND,
		BITE,
		BITTER_BLADE,
		BITTER_MALICE,
		//BLACK_HOLE_ECLIPSE,
		BLAST_BURN,
		BLAZE_KICK,
		//BLAZING_TORQUE,
		BLEAKWIND_STORM,
		BLIZZARD,
		BLOCK,
		//BLOOM_DOOM,
		BLUE_FLARE,
		BODY_PRESS,
		BODY_SLAM,
		BOLT_BEAK,
		BOLT_STRIKE,
		BONE_CLUB,
		BONE_RUSH,
		BONEMERANG,
		BOOMBURST,
		BOUNCE,
		//BOUNCY_BUBBLE,
		BRANCH_POKE,
		BRAVE_BIRD,
		BREAKING_SWIPE,
		//BREAKNECK_BLITZ,
		BRICK_BREAK,
		BRINE,
		BRUTAL_SWING,
		BUBBLE,
		BUBBLE_BEAM,
		BUG_BITE,
		BUG_BUZZ,
		BULK_UP,
		BULLDOZE,
		BULLET_PUNCH,
		BULLET_SEED,
		BURN_UP,
		BURNING_JEALOUSY,
		BURNING_BULWARK,
		//BUZZY_BUZZ,
		CALM_MIND,
		CAMOUFLAGE,
		CAPTIVATE,
		//CATASTROPIKA,
		CEASELESS_EDGE,
		//CELEBRATE,
		CHARGE,
		CHARGE_BEAM,
		CHARM,
		CHATTER,
		CHILLING_WATER,
		CHILLY_RECEPTION,
		CHIP_AWAY,
		CHLOROBLAST,
		CIRCLE_THROW,
		CLAMP,
		CLANGING_SCALES,
		CLANGOROUS_SOUL,
		//CLANGOROUS_SOULBLAZE,
		CLEAR_SMOG,
		CLOSE_COMBAT,
		COACHING,
		COIL,
		COLLISION_COURSE,
		//COMBAT_TORQUE,
		COMET_PUNCH,
		COMEUPPANCE,
		CONFIDE,
		CONFUSE_RAY,
		CONFUSION,
		CONSTRICT,
		//CONTINENTAL_CRUSH,
		CONVERSION,
		CONVERSION_2,
		COPYCAT,
		CORE_ENFORCER,
		//CORKSCREW_CRASH,
		CORROSIVE_GAS,
		COSMIC_POWER,
		COTTON_GUARD,
		COTTON_SPORE,
		COUNTER,
		COURT_CHANGE,
		COVET,
		CRABHAMMER,
		CRAFTY_SHIELD,
		CROSS_CHOP,
		CROSS_POISON,
		CRUNCH,
		CRUSH_CLAW,
		CRUSH_GRIP,
		CURSE,
		CUT,
		DARK_PULSE,
		DARK_VOID,
		DARKEST_LARIAT,
		DAZZLING_GLEAM,
		DECORATE,
		DEFEND_ORDER,
		DEFENSE_CURL,
		DEFOG,
		DESTINY_BOND,
		DETECT,
		//DEVASTATING_DRAKE,
		DIAMOND_STORM,
		DIG,
		DIRE_CLAW,
		DISABLE,
		DISARMING_VOICE,
		DISCHARGE,
		DIVE,
		DIZZY_PUNCH,
		DOODLE,
		DOOM_DESIRE,
		DOUBLE_HIT,
		DOUBLE_IRON_BASH,
		DOUBLE_KICK,
		DOUBLE_SHOCK,
		DOUBLE_SLAP,
		DOUBLE_TEAM,
		DOUBLE_EDGE,
		DRACO_METEOR,
		DRAGON_ASCENT,
		DRAGON_BREATH,
		DRAGON_CLAW,
		DRAGON_DANCE,
		DRAGON_DARTS,
		DRAGON_ENERGY,
		DRAGON_HAMMER,
		DRAGON_PULSE,
		DRAGON_RAGE,
		DRAGON_RUSH,
		DRAGON_TAIL,
		DRAIN_PUNCH,
		DRAINING_KISS,
		DREAM_EATER,
		DRILL_PECK,
		DRILL_RUN,
		DRUM_BEATING,
		DUAL_CHOP,
		DUAL_WINGBEAT,
		DYNAMAX_CANNON,
		DYNAMIC_PUNCH,
		EARTH_POWER,
		EARTHQUAKE,
		ECHOED_VOICE,
		EERIE_IMPULSE,
		EERIE_SPELL,
		EGG_BOMB,
		ELECTRIC_TERRAIN,
		ELECTRIFY,
		ELECTRO_BALL,
		ELECTRO_DRIFT,
		ELECTROWEB,
		EMBARGO,
		EMBER,
		ENCORE,
		ENDEAVOR,
		ENDURE,
		ENERGY_BALL,
		ENTRAINMENT,
		ERUPTION,
		ESPER_WING,
		ETERNABEAM,
		EXPANDING_FORCE,
		EXPLOSION,
		EXTRASENSORY,
		//EXTREME_EVOBOOST,
		EXTREME_SPEED,
		FACADE,
		FAIRY_LOCK,
		FAIRY_WIND,
		FAKE_OUT,
		FAKE_TEARS,
		FALSE_SURRENDER,
		FALSE_SWIPE,
		FEATHER_DANCE,
		FEINT,
		FEINT_ATTACK,
		FELL_STINGER,
		FIERY_DANCE,
		FIERY_WRATH,
		FILLET_AWAY,
		FINAL_GAMBIT,
		FIRE_BLAST,
		FIRE_FANG,
		FIRE_LASH,
		FIRE_PLEDGE,
		FIRE_PUNCH,
		FIRE_SPIN,
		FIRST_IMPRESSION,
		FISHIOUS_REND,
		FISSURE,
		FLAIL,
		FLAME_BURST,
		FLAME_CHARGE,
		FLAME_WHEEL,
		FLAMETHROWER,
		FLARE_BLITZ,
		FLASH,
		FLASH_CANNON,
		FLATTER,
		FLEUR_CANNON,
		FLING,
		FLIP_TURN,
		//FLOATY_FALL,
		FLORAL_HEALING,
		FLOWER_SHIELD,
		FLOWER_TRICK,
		FLY,
		FLYING_PRESS,
		FOCUS_BLAST,
		FOCUS_ENERGY,
		FOCUS_PUNCH,
		FOLLOW_ME,
		FORCE_PALM,
		FORESIGHT,
		FOREST_S_CURSE,
		FOUL_PLAY,
		FREEZE_SHOCK,
		FREEZE_DRY,
		FREEZING_GLARE,
		//FREEZY_FROST,
		FRENZY_PLANT,
		FROST_BREATH,
		FRUSTRATION,
		FURY_ATTACK,
		FURY_CUTTER,
		FURY_SWIPES,
		FUSION_BOLT,
		FUSION_FLARE,
		FUTURE_SIGHT,
		//G_MAX_BEFUDDLE,
		//G_MAX_CANNONADE,
		//G_MAX_CENTIFERNO,
		//G_MAX_CHI_STRIKE,
		//G_MAX_CUDDLE,
		//G_MAX_DEPLETION,
		//G_MAX_DRUM_SOLO,
		//G_MAX_FINALE,
		//G_MAX_FIREBALL,
		//G_MAX_FOAM_BURST,
		//G_MAX_GOLD_RUSH,
		//G_MAX_GRAVITAS,
		//G_MAX_HYDROSNIPE,
		//G_MAX_MALODOR,
		//G_MAX_MELTDOWN,
		//G_MAX_ONE_BLOW,
		//G_MAX_RAPID_FLOW,
		//G_MAX_REPLENISH,
		//G_MAX_RESONANCE,
		//G_MAX_SANDBLAST,
		//G_MAX_SMITE,
		//G_MAX_SNOOZE,
		//G_MAX_STEELSURGE,
		//G_MAX_STONESURGE,
		//G_MAX_STUN_SHOCK,
		//G_MAX_SWEETNESS,
		//G_MAX_TARTNESS,
		//G_MAX_TERROR,
		//G_MAX_VINE_LASH,
		//G_MAX_VOLCALITH,
		//G_MAX_VOLT_CRASH,
		//G_MAX_WILDFIRE,
		//G_MAX_WIND_RAGE,
		GASTRO_ACID,
		GEAR_GRIND,
		GEAR_UP,
		//GENESIS_SUPERNOVA,
		GEOMANCY,
		GIGA_DRAIN,
		GIGA_IMPACT,
		GIGATON_HAMMER,
		//GIGAVOLT_HAVOC,
		GLACIAL_LANCE,
		GLACIATE,
		GLAIVE_RUSH,
		GLARE,
		//GLITZY_GLOW,
		GRASS_KNOT,
		GRASS_PLEDGE,
		GRASS_WHISTLE,
		//GRASSY_GLIDE,
		GRASSY_TERRAIN,
		GRAV_APPLE,
		GRAVITY,
		GROWL,
		GROWTH,
		GRUDGE,
		GUARD_SPLIT,
		GUARD_SWAP,
		//GUARDIAN_OF_ALOLA,
		GUILLOTINE,
		GUNK_SHOT,
		GUST,
		GYRO_BALL,
		HAIL,
		HAMMER_ARM,
		HAPPY_HOUR,
		HARDEN,
		HAZE,
		HEAD_CHARGE,
		HEAD_SMASH,
		HEADBUTT,
		HEADLONG_RUSH,
		HEAL_BELL,
		HEAL_BLOCK,
		HEAL_ORDER,
		HEAL_PULSE,
		HEALING_WISH,
		HEART_STAMP,
		HEART_SWAP,
		HEAT_CRASH,
		HEAT_WAVE,
		HEAVY_SLAM,
		HELPING_HAND,
		HEX,
		HIDDEN_POWER,
		HIGH_HORSEPOWER,
		HIGH_JUMP_KICK,
		HOLD_BACK,
		//HOLD_HANDS,
		HONE_CLAWS,
		HORN_ATTACK,
		HORN_DRILL,
		HORN_LEECH,
		HOWL,
		HURRICANE,
		HYDRO_CANNON,
		HYDRO_PUMP,
		HYDRO_STEAM,
		//HYDRO_VORTEX,
		HYPER_BEAM,
		HYPER_DRILL,
		HYPER_FANG,
		HYPER_VOICE,
		HYPERSPACE_FURY,
		HYPERSPACE_HOLE,
		HYPNOSIS,
		ICE_BALL,
		ICE_BEAM,
		ICE_BURN,
		ICE_FANG,
		ICE_HAMMER,
		ICE_PUNCH,
		ICE_SHARD,
		ICE_SPINNER,
		ICICLE_CRASH,
		ICICLE_SPEAR,
		ICY_WIND,
		IMPRISON,
		INCINERATE,
		INFERNAL_PARADE,
		INFERNO,
		//INFERNO_OVERDRIVE,
		INFESTATION,
		INGRAIN,
		INSTRUCT,
		ION_DELUGE,
		IRON_DEFENSE,
		IRON_HEAD,
		IRON_TAIL,
		JAW_LOCK,
		JET_PUNCH,
		JUDGMENT,
		JUMP_KICK,
		JUNGLE_HEALING,
		KARATE_CHOP,
		KINESIS,
		KING_S_SHIELD,
		KNOCK_OFF,
		KOWTOW_CLEAVE,
		LAND_S_WRATH,
		LASER_FOCUS,
		LASH_OUT,
		LAST_RESORT,
		LAST_RESPECTS,
		LAVA_PLUME,
		LEAF_BLADE,
		LEAF_STORM,
		LEAF_TORNADO,
		LEAFAGE,
		LEECH_LIFE,
		LEECH_SEED,
		LEER,
		//LET_S_SNUGGLE_FOREVER,
		LICK,
		LIFE_DEW,
		LIGHT_OF_RUIN,
		LIGHT_SCREEN,
		//LIGHT_THAT_BURNS_THE_SKY,
		LIQUIDATION,
		LOCK_ON,
		LOVELY_KISS,
		LOW_KICK,
		LOW_SWEEP,
		LUCKY_CHANT,
		LUMINA_CRASH,
		LUNAR_BLESSING,
		LUNAR_DANCE,
		LUNGE,
		LUSTER_PURGE,
		MACH_PUNCH,
		MAGIC_COAT,
		MAGIC_POWDER,
		MAGIC_ROOM,
		MAGICAL_LEAF,
		//MAGICAL_TORQUE,
		MAGMA_STORM,
		MAGNET_BOMB,
		MAGNET_RISE,
		MAGNETIC_FLUX,
		MAGNITUDE,
		MAKE_IT_RAIN,
		//MALICIOUS_MOONSAULT,
		MAT_BLOCK,
		//MAX_AIRSTREAM,
		//MAX_DARKNESS,
		//MAX_FLARE,
		//MAX_FLUTTERBY,
		//MAX_GEYSER,
		//MAX_GUARD,
		//MAX_HAILSTORM,
		//MAX_KNUCKLE,
		//MAX_LIGHTNING,
		//MAX_MINDSTORM,
		//MAX_OOZE,
		//MAX_OVERGROWTH,
		//MAX_PHANTASM,
		//MAX_QUAKE,
		//MAX_ROCKFALL,
		//MAX_STARFALL,
		//MAX_STEELSPIKE,
		//MAX_STRIKE,
		//MAX_WYRMWIND,
		ME_FIRST,
		MEAN_LOOK,
		MEDITATE,
		MEGA_DRAIN,
		MEGA_KICK,
		MEGA_PUNCH,
		MEGAHORN,
		MEMENTO,
		//MENACING_MOONRAZE_MAELSTROM,
		METAL_BURST,
		METAL_CLAW,
		METAL_SOUND,
		METEOR_ASSAULT,
		METEOR_BEAM,
		METEOR_MASH,
		METRONOME,
		MILK_DRINK,
		MIMIC,
		MIND_BLOWN,
		MIND_READER,
		MINIMIZE,
		MIRACLE_EYE,
		MIRROR_COAT,
		MIRROR_MOVE,
		MIRROR_SHOT,
		MIST,
		MIST_BALL,
		MISTY_EXPLOSION,
		MISTY_TERRAIN,
		MOONBLAST,
		MOONGEIST_BEAM,
		MOONLIGHT,
		MORNING_SUN,
		MORTAL_SPIN,
		MOUNTAIN_GALE,
		MUD_BOMB,
		MUD_SHOT,
		MUD_SPORT,
		MUD_SLAP,
		MUDDY_WATER,
		MULTI_ATTACK,
		MYSTICAL_FIRE,
		MYSTICAL_POWER,
		NASTY_PLOT,
		NATURAL_GIFT,
		NATURE_POWER,
		NATURE_S_MADNESS,
		NEEDLE_ARM,
		//NEVER_ENDING_NIGHTMARE,
		NIGHT_DAZE,
		NIGHT_SHADE,
		NIGHT_SLASH,
		NIGHTMARE,
		NO_RETREAT,
		NOBLE_ROAR,
		//NOXIOUS_TORQUE,
		NUZZLE,
		OBLIVION_WING,
		OBSTRUCT,
		//OCEANIC_OPERETTA,
		OCTAZOOKA,
		OCTOLOCK,
		ODOR_SLEUTH,
		OMINOUS_WIND,
		ORDER_UP,
		ORIGIN_PULSE,
		OUTRAGE,
		OVERDRIVE,
		OVERHEAT,
		PAIN_SPLIT,
		PARABOLIC_CHARGE,
		PARTING_SHOT,
		PAY_DAY,
		PAYBACK,
		PECK,
		PERISH_SONG,
		PETAL_BLIZZARD,
		PETAL_DANCE,
		PHANTOM_FORCE,
		PHOTON_GEYSER,
		//PIKA_PAPOW,
		PIN_MISSILE,
		PLASMA_FISTS,
		PLAY_NICE,
		PLAY_ROUGH,
		PLUCK,
		POISON_FANG,
		POISON_GAS,
		POISON_JAB,
		POISON_POWDER,
		POISON_STING,
		POISON_TAIL,
		POLLEN_PUFF,
		POLTERGEIST,
		POPULATION_BOMB,
		POUNCE,
		POUND,
		POWDER,
		POWDER_SNOW,
		POWER_GEM,
		POWER_SHIFT,
		POWER_SPLIT,
		POWER_SWAP,
		POWER_TRICK,
		POWER_TRIP,
		POWER_WHIP,
		POWER_UP_PUNCH,
		PRECIPICE_BLADES,
		PRESENT,
		PRISMATIC_LASER,
		PROTECT,
		PSYBEAM,
		PSYBLADE,
		PSYCH_UP,
		PSYCHIC,
		PSYCHIC_FANGS,
		PSYCHIC_TERRAIN,
		PSYCHO_BOOST,
		PSYCHO_CUT,
		PSYCHO_SHIFT,
		PSYSHIELD_BASH,
		PSYSHOCK,
		PSYSTRIKE,
		PSYWAVE,
		//PULVERIZING_PANCAKE,
		PUNISHMENT,
		PURIFY,
		PURSUIT,
		PYRO_BALL,
		QUASH,
		QUICK_ATTACK,
		QUICK_GUARD,
		QUIVER_DANCE,
		RAGE,
		RAGE_FIST,
		RAGE_POWDER,
		RAGING_BULL,
		RAGING_FURY,
		RAIN_DANCE,
		RAPID_SPIN,
		RAZOR_LEAF,
		RAZOR_SHELL,
		RAZOR_WIND,
		RECOVER,
		RECYCLE,
		REFLECT,
		REFLECT_TYPE,
		REFRESH,
		RELIC_SONG,
		REST,
		RETALIATE,
		RETURN,
		REVELATION_DANCE,
		REVENGE,
		REVERSAL,
		REVIVAL_BLESSING,
		RISING_VOLTAGE,
		ROAR,
		ROAR_OF_TIME,
		ROCK_BLAST,
		ROCK_CLIMB,
		ROCK_POLISH,
		ROCK_SLIDE,
		ROCK_SMASH,
		ROCK_THROW,
		ROCK_TOMB,
		ROCK_WRECKER,
		ROLE_PLAY,
		ROLLING_KICK,
		ROLLOUT,
		ROOST,
		ROTOTILLER,
		ROUND,
		RUINATION,
		SACRED_FIRE,
		SACRED_SWORD,
		SAFEGUARD,
		SALT_CURE,
		SAND_ATTACK,
		SAND_TOMB,
		SANDSEAR_STORM,
		SANDSTORM,
		//SAPPY_SEED,
		//SAVAGE_SPIN_OUT,
		SCALD,
		SCALE_SHOT,
		SCARY_FACE,
		SCORCHING_SANDS,
		SCRATCH,
		SCREECH,
		SEARING_SHOT,
		//SEARING_SUNRAZE_SMASH,
		SECRET_POWER,
		SECRET_SWORD,
		SEED_BOMB,
		SEED_FLARE,
		SEISMIC_TOSS,
		SELF_DESTRUCT,
		SHADOW_BALL,
		SHADOW_BONE,
		SHADOW_CLAW,
		SHADOW_FORCE,
		SHADOW_PUNCH,
		SHADOW_SNEAK,
		SHARPEN,
		//SHATTERED_PSYCHE,
		SHED_TAIL,
		SHEER_COLD,
		SHELL_SIDE_ARM,
		SHELL_SMASH,
		SHELL_TRAP,
		SHELTER,
		SHIFT_GEAR,
		SHOCK_WAVE,
		SHORE_UP,
		SIGNAL_BEAM,
		SILK_TRAP,
		SILVER_WIND,
		SIMPLE_BEAM,
		SING,
		//SINISTER_ARROW_RAID,
		//SIZZLY_SLIDE,
		SKETCH,
		SKILL_SWAP,
		SKITTER_SMACK,
		SKULL_BASH,
		SKY_ATTACK,
		SKY_DROP,
		SKY_UPPERCUT,
		SLACK_OFF,
		SLAM,
		SLASH,
		SLEEP_POWDER,
		SLEEP_TALK,
		SLUDGE,
		SLUDGE_BOMB,
		SLUDGE_WAVE,
		SMACK_DOWN,
		SMART_STRIKE,
		SMELLING_SALTS,
		SMOG,
		SMOKESCREEN,
		SNAP_TRAP,
		SNARL,
		SNATCH,
		SNIPE_SHOT,
		SNORE,
		SNOWSCAPE,
		SOAK,
		SOFT_BOILED,
		SOLAR_BEAM,
		SOLAR_BLADE,
		SONIC_BOOM,
		//SOUL_STEALING_7_STAR_STRIKE,
		SPACIAL_REND,
		SPARK,
		SPARKLING_ARIA,
		//SPARKLY_SWIRL,
		SPECTRAL_THIEF,
		SPEED_SWAP,
		SPICY_EXTRACT,
		SPIDER_WEB,
		SPIKE_CANNON,
		SPIKES,
		SPIKY_SHIELD,
		SPIN_OUT,
		SPIRIT_BREAK,
		SPIRIT_SHACKLE,
		SPIT_UP,
		SPITE,
		SPLASH,
		//SPLINTERED_STORMSHARDS,
		//SPLISHY_SPLASH,
		SPORE,
		SPOTLIGHT,
		SPRINGTIDE_STORM,
		STEALTH_ROCK,
		STEAM_ERUPTION,
		STEAMROLLER,
		STEEL_BEAM,
		STEEL_ROLLER,
		STEEL_WING,
		STICKY_WEB,
		STOCKPILE,
		//STOKED_SPARKSURFER,
		STOMP,
		STOMPING_TANTRUM,
		STONE_AXE,
		STONE_EDGE,
		STORED_POWER,
		STORM_THROW,
		STRANGE_STEAM,
		STRENGTH,
		STRENGTH_SAP,
		STRING_SHOT,
		STRUGGLE,
		STRUGGLE_BUG,
		STUFF_CHEEKS,
		STUN_SPORE,
		SUBMISSION,
		SUBSTITUTE,
		//SUBZERO_SLAMMER,
		SUCKER_PUNCH,
		SUNNY_DAY,
		SUNSTEEL_STRIKE,
		SUPER_FANG,
		SUPERPOWER,
		SUPERSONIC,
		//SUPERSONIC_SKYSTRIKE,
		SURF,
		SURGING_STRIKES,
		SWAGGER,
		SWALLOW,
		SWEET_KISS,
		SWEET_SCENT,
		SWIFT,
		SWITCHEROO,
		SWORDS_DANCE,
		SYNCHRONOISE,
		SYNTHESIS,
		TACKLE,
		TAIL_GLOW,
		TAIL_SLAP,
		TAIL_WHIP,
		TAILWIND,
		TAKE_DOWN,
		TAKE_HEART,
		TAR_SHOT,
		TAUNT,
		TEARFUL_LOOK,
		TEATIME,
		TECHNO_BLAST,
		//TECTONIC_RAGE,
		TEETER_DANCE,
		TELEKINESIS,
		TELEPORT,
		//TERA_BLAST,
		TERRAIN_PULSE,
		THIEF,
		THOUSAND_ARROWS,
		THOUSAND_WAVES,
		THRASH,
		THROAT_CHOP,
		THUNDER,
		THUNDER_CAGE,
		THUNDER_FANG,
		THUNDER_PUNCH,
		THUNDER_SHOCK,
		THUNDER_WAVE,
		THUNDERBOLT,
		THUNDEROUS_KICK,
		TICKLE,
		TIDY_UP,
		TOPSY_TURVY,
		TORCH_SONG,
		TORMENT,
		TOXIC,
		TOXIC_SPIKES,
		TOXIC_THREAD,
		TRAILBLAZE,
		TRANSFORM,
		TRI_ATTACK,
		TRICK,
		TRICK_ROOM,
		TRICK_OR_TREAT,
		TRIPLE_ARROWS,
		TRIPLE_AXEL,
		TRIPLE_DIVE,
		TRIPLE_KICK,
		TROP_KICK,
		TRUMP_CARD,
		TWIN_BEAM,
		TWINEEDLE,
		//TWINKLE_TACKLE,
		TWISTER,
		U_TURN,
		UPROAR,
		V_CREATE,
		VACUUM_WAVE,
		//VEEVEE_VOLLEY,
		VENOM_DRENCH,
		VENOSHOCK,
		VICTORY_DANCE,
		VINE_WHIP,
		VISE_GRIP,
		VITAL_THROW,
		VOLT_SWITCH,
		VOLT_TACKLE,
		WAKE_UP_SLAP,
		WATER_GUN,
		WATER_PLEDGE,
		WATER_PULSE,
		WATER_SHURIKEN,
		WATER_SPORT,
		WATER_SPOUT,
		WATERFALL,
		WAVE_CRASH,
		WEATHER_BALL,
		WHIRLPOOL,
		WHIRLWIND,
		WICKED_BLOW,
		//WICKED_TORQUE,
		WIDE_GUARD,
		WILD_CHARGE,
		WILDBOLT_STORM,
		WILL_O_WISP,
		WING_ATTACK,
		WISH,
		WITHDRAW,
		WONDER_ROOM,
		WOOD_HAMMER,
		WORK_UP,
		WORRY_SEED,
		WRAP,
		WRING_OUT,
		X_SCISSOR,
		YAWN,
		ZAP_CANNON,
		ZEN_HEADBUTT,
		ZING_ZAP,
		//ZIPPY_ZAP
		MOVES_NR_ITEMS
	};
}